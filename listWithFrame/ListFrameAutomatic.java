package listWithFrame;

import java.util.*;

/**
 *
 * @author bas
 */
public class ListFrameAutomatic extends javax.swing.JFrame {

    /**
     * Creates new form ListFrameAutomatic
     */
    public ListFrameAutomatic() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGenerateList = new javax.swing.JButton();
        btnRemoveDuplicates = new javax.swing.JButton();
        btnRemoveAllDuplicates = new javax.swing.JButton();
        btnSortListDescending = new javax.swing.JButton();
        btnSortHalfList = new javax.swing.JButton();
        txtGenerateList = new javax.swing.JTextField();
        txtRemoveDuplicates = new javax.swing.JTextField();
        txtRemoveAllDuplicates = new javax.swing.JTextField();
        txtSortListDescending = new javax.swing.JTextField();
        txtSortHalfList = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnGenerateList.setText("Generate List");
        btnGenerateList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateListActionPerformed(evt);
            }
        });

        btnRemoveDuplicates.setText("Remove Duplicates");
        btnRemoveDuplicates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveDuplicatesActionPerformed(evt);
            }
        });

        btnRemoveAllDuplicates.setText("Remove All Duplicates");
        btnRemoveAllDuplicates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAllDuplicatesActionPerformed(evt);
            }
        });

        btnSortListDescending.setText("Sort List Descending");
        btnSortListDescending.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortListDescendingActionPerformed(evt);
            }
        });

        btnSortHalfList.setText("Sort Half List");
        btnSortHalfList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortHalfListActionPerformed(evt);
            }
        });

        txtGenerateList.setEditable(false);
        txtGenerateList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenerateListActionPerformed(evt);
            }
        });

        txtRemoveDuplicates.setEditable(false);

        txtRemoveAllDuplicates.setEditable(false);

        txtSortListDescending.setEditable(false);

        txtSortHalfList.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnSortHalfList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSortListDescending, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemoveAllDuplicates, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                    .addComponent(btnGenerateList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemoveDuplicates, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRemoveDuplicates, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                    .addComponent(txtGenerateList)
                    .addComponent(txtRemoveAllDuplicates)
                    .addComponent(txtSortListDescending)
                    .addComponent(txtSortHalfList))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtGenerateList, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerateList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveDuplicates, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRemoveDuplicates, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveAllDuplicates, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRemoveAllDuplicates, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSortListDescending, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSortListDescending, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSortHalfList, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSortHalfList, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtGenerateListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenerateListActionPerformed

    }//GEN-LAST:event_txtGenerateListActionPerformed

    private void btnGenerateListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateListActionPerformed
        int size = generateListSize();
        list = new ArrayList<>();

        for (int i = 0; i < size; i++) {
            list.add(random.nextInt(10));
        }

        txtGenerateList.setText(list.toString());
    }//GEN-LAST:event_btnGenerateListActionPerformed

    private void btnRemoveDuplicatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveDuplicatesActionPerformed
        if (!list.isEmpty()) {
            txtRemoveDuplicates.setText(removeDuplicates(list).toString());
        }
    }//GEN-LAST:event_btnRemoveDuplicatesActionPerformed

    private void btnRemoveAllDuplicatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllDuplicatesActionPerformed
        if (!list.isEmpty()) {
            txtRemoveAllDuplicates.setText(removeAllDuplicates(list).toString());
        }
    }//GEN-LAST:event_btnRemoveAllDuplicatesActionPerformed

    private void btnSortListDescendingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortListDescendingActionPerformed
        List<Integer> sortedDescending = new ArrayList<>(list);
        Collections.sort(sortedDescending, Collections.reverseOrder());
        txtSortListDescending.setText(sortedDescending.toString());
    }//GEN-LAST:event_btnSortListDescendingActionPerformed

    private void btnSortHalfListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortHalfListActionPerformed
        int oddSizeOffset = 0;

        if ((list.size()) % 2 == 1) {
            oddSizeOffset++;
        }

        List<Integer> sortedDescendingHalf = new ArrayList<>(
                list.subList(0, list.size() / 2));
        List<Integer> sortedAscendingHalf = new ArrayList<>(
                list.subList(list.size() / 2 + oddSizeOffset, list.size()));

        if (oddSizeOffset > 0) {
            sortedDescendingHalf.add(list.get(list.size() / 2 + 1));
        }

        Collections.sort(sortedDescendingHalf, Collections.reverseOrder());
        Collections.sort(sortedAscendingHalf);

        sortedDescendingHalf.addAll(sortedAscendingHalf);
        txtSortHalfList.setText(sortedDescendingHalf.toString());
    }//GEN-LAST:event_btnSortHalfListActionPerformed

    private static int generateListSize() {
        return 10 + random.nextInt(6);
    }

    private static HashSet<Integer> removeAllDuplicates(List<Integer> list) {
        HashSet<Integer> sortedWithoutDuplicates = new HashSet<>(list);

        return sortedWithoutDuplicates;
    }

    private static List<Integer> removeDuplicates(List<Integer> list) {
        List<Integer> newList = new ArrayList<>(list);
        ListIterator<Integer> iter = newList.listIterator();

        while (iter.hasNext()) {
            Integer element = iter.next();

            if (iter.hasNext()) {
                while (iter.hasNext() && element.equals(newList.get(iter.nextIndex()))) {
                    iter.next();
                    iter.remove();
                }
            }
        }

        return newList;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListFrameAutomatic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListFrameAutomatic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListFrameAutomatic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListFrameAutomatic.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListFrameAutomatic().setVisible(true);
            }
        });
    }

    private List<Integer> list;
    private static final Random random = new Random();


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerateList;
    private javax.swing.JButton btnRemoveAllDuplicates;
    private javax.swing.JButton btnRemoveDuplicates;
    private javax.swing.JButton btnSortHalfList;
    private javax.swing.JButton btnSortListDescending;
    private javax.swing.JTextField txtGenerateList;
    private javax.swing.JTextField txtRemoveAllDuplicates;
    private javax.swing.JTextField txtRemoveDuplicates;
    private javax.swing.JTextField txtSortHalfList;
    private javax.swing.JTextField txtSortListDescending;
    // End of variables declaration//GEN-END:variables
}
